/**
 * CopyRight Samphay.
 * 2017/12/29
 */
import {ajax} from './../../services/index';
import {openNotice} from './../../utils';
import {effects, subscriptions} from './../index';
import {post,fetch} from "../index";
const namespace = "vodActiveManage";
const setFetchSendData = paramData => {
  let {page,size,value,key,search} = paramData;
  page -= 1;
  const param = {};
  Object.keys(paramData).map(key=>{
    if(("page,size,value,key,search").indexOf(key)<0){
      param[key] = paramData[key]
    }
  });
  return {
    page: JSON.stringify({
      page,size,value,key,search
    }),
    ...param
  }
};
const setFetchResult = ret => {
  return {
    list: ret.data,
    total: parseInt(ret.iTotalDisplayRecords, 10),
  }
};
const setAddProps = {
  url: "/xvod/firstvipactivity/v1/save",
  type: "post",
  setSendData(payload) {
    return {
      param: JSON.stringify({
        ...payload
      })
    }
  },
  fixData(data) {
    return {
      isSuccess: data.return_code==1000,
      successMsg: "保存成功",
      success({put}) {
        return [
          put({
            type:"closeAddModal"
          })
        ]
      },
      fail() {
      },
      failedMsg: "保存失败"
    };
  }
};
const setDeleteProps = {
  url: "/xvod/firstvipactivity/v1/del",
  type: "post",
  setSendData({data}) {
    return {
      code:data.code
    }
  },
  fixData(data) {
    return {
      isSuccess: data.return_code==1000,
      successMsg: "删除成功",
      success() {
      },
      fail() {
      },
      failedMsg: "删除失败"
    };
  }
};
export default {
  namespace,
  state: {
    addModalVisible: false,
    formData: {},
    list: [],
    loading: false, // 列表的展示蒙层的标识
    pageParam: { // 分页+名称筛选的参数
      page: 1,
      size: 10,
      search: '',
      key: 'updateTime',
      value: 'desc',
    },
    configData: {}, // 界面的配置参数
    filterParam: {}, // 筛选参数
    total: 0, // 列表的总数
    modalData: {}
  },
  reducers: {
    save(state, {payload}) {
      return {...state, ...payload};
    },
  },
  effects: {
    ...effects({
      namespace,
      setFetchSendData,
      setFetchResult,
      setAddProps,
      setDeleteProps,
      setConfigFieldsValue:[
        {
          key:"cpCode",
          value:"tx"
        }
      ]
    }),
    * openAddModal({payload}, {put}) {
      yield put({
        type: "save",
        payload: {
          modalData: {...payload},
          addModalVisible: true
        }
      });
      yield put({
        type: "getDetail",
        payload: {
          ...payload
        }
      });
    },
    * closeAddModal({payload}, {put}) {
      yield put({
        type: "save",
        payload: {
          addModalVisible: false,
          modalData: {},
          formData: {}
        }
      })
    },
    * getDetail({payload}, {put, call}) {
      let {data} = payload;
      if (data) {
        yield put({
          type: "save",
          payload: {
            formData: data
          }
        })
      }
    },
    changeRelease:post({
      url: "/xvod/firstvipactivity/v1/publish",
      type: "post",
      setSendData({data,saleStatus}) {
        return {
          code: data.code,
          saleStatus:saleStatus
        }
      },
      setResult(data) {
        return {
          isSuccess: data.return_code == 1000,
          successMsg: "更改成功",
          success({put}) {
            return [
              put({
                type: "fetch"
              })
            ];
          },
          fail() {
          },
          failedMsg: "操作失败"
        };
      }
    }),
    getThirdListData:post({
      url: "/xvod/thirdcombo/v1/thirdcombolist",
      type: "get",
      setSendData({cpCode,comboTypeCode}) {
        return {
          cpCode,comboTypeCode
        }
      },
      setResult(data) {
        return {
          isSuccess: data.return_code == 1000,
          // successMsg: "更改成功",
          success({put}) {
            console.log(data)
            /*return [
              put({
                type: "fetch"
              })
            ];*/
          },
          fail() {
          },
          // failedMsg: "操作失败"
        };
      }
    }),
  },
  subscriptions: {
    ...subscriptions({namespace})
  },
};
